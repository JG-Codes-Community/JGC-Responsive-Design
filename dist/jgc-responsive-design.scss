/*! JG.Codes Responsive Design | The MIT License | Copyright Â©2018 JG.Codes - https://www.jg.codes/ <admin@jg.codes> */

// Font size
$fontSizes:     1   16  8,
                2   20  10,
                3   24  12,
                4   30  15,
                5   36  18,
                6   48  22,
                7   60  26,
                8   75  31,
                9   90  36;

// Screen Size (ID, Label, Width Maximum)
$screenSizes:   1 'xl' null,
                2 'lg' 1920px,
                3 'md' 1280px,
                4 'sm' 960px,
                5 'xs' 600px;

// Screen Width (ID, Width)
$screenWidths:  1 8.33%,
                2 16.66%,
                3 25%,
                4 33.33%,
                5 41.66%,
                6 50%,
                7 58.33%,
                8 66.66%,
                9 75%,
                10 83.33%,
                11 91.66%,
                12 100%;

a, abbr, acronym, address, applet, article, aside, audio, b, big, blockquote, body, canvas, caption, center, cite, code, dd, del, details, dfn, div, dl, dt, em, embed, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, header, hgroup, html, i, iframe, img, ins, kbd, label, legend, li, mark, menu, nav, object, ol, output, p, pre, q, ruby, s, samp, section, small, span, strike, strong, sub, summary, sup, table, tbody, td, tfoot, th, thead, time, tr, tt, u, ul, var, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
    display: block;
}
body {
    line-height: 1;
}
ol, ul {
    list-style: none;
}
blockquote, q {
    quotes: none;
}
blockquote:before, blockquote:after, q:before, q:after {
    content: "";
    content: none;
}
table {
    border-collapse: collapse;
    border-spacing: 0;
}

* {box-sizing: border-box;}

a {
    outline: 0;
    color: inherit;
    text-decoration: inherit;
    -webkit-tap-highlight-color: transparent;
    -webkit-touch-callout: none;
}
[class*="jgc-rd-"] {float: left;}

@each $screenSizeId, $screenSizeLabel, $screenSize in $screenSizes {
    $fontSizeMedium: nth($fontSizes, 3);
    $fontSizeMediumMax: nth($fontSizeMedium, 2);
    $fontSizeMediumMin: nth($fontSizeMedium, 3);
    @if $screenSizeId == 1 {
        @each $screenWidthId, $screenWidthSize in $screenWidths {
            [class*="jgc-rd-#{$screenWidthId}"] {
                width: $screenWidthSize;
            }
        }
        [class*="jgc-rd-"][class*="-hide"] {display: none;}
        [class*="jgc-rd-"][class*="-show"] {display: block;}
        body {font-size: #{$fontSizeMediumMax}px;}
        @each $fontSizeId, $fontSizeMax, $fontSizeMin in $fontSizes {
            .f#{$fontSizeId} {
                font-size: #{nth(nth($fontSizes, $fontSizeId), 2)}px;
            }
        }
        @media only screen and (min-width: #{nth(nth($screenSizes, 2), 3)}) {
            @each $screenWidthId, $screenWidthSize in $screenWidths {
                [class*="jgc-rd-"][class*="-#{$screenSizeLabel}#{$screenWidthId}"] {
                    width: $screenWidthSize;
                }
            }
            [class*="jgc-rd-"][class*="-xlhide"] {display: none;}
            [class*="jgc-rd-"][class*="-xlshow"] {display: block;}
        }
    } @else {
        @media only screen and (max-width: $screenSize) {
            $previousSizeLabel: nth(nth($screenSizes, $screenSizeId - 1), 2);
            $nextScreenSize: 0;
            @if $screenSizeLabel != "xs" {
                $nextScreenSize: nth(nth($screenSizes, $screenSizeId + 1), 3);
            }
            @each $screenWidthId, $screenWidthSize in $screenWidths {
                [class*="jgc-rd-"][class*="-s#{$previousSizeLabel}#{$screenWidthId}"] {
                    width: $screenWidthSize;
                }
            }
            [class*="jgc-rd-"][class*="-s#{$previousSizeLabel}hide"] {display: none;}
            [class*="jgc-rd-"][class*="-s#{$previousSizeLabel}show"] {display: block;}
            $finalFontSizeMediumSize: ($fontSizeMediumMax - $fontSizeMediumMin) * ((4 - ($screenSizeId - 1)) * 0.25) + $fontSizeMediumMin;
            body {font-size: #{$finalFontSizeMediumSize}px;}
            @each $fontSizeId, $fontSizeMax, $fontSizeMin in $fontSizes {
                .f#{$fontSizeId} {
                    $finalFontSize: ($fontSizeMax - $fontSizeMin) * ((4 - ($screenSizeId - 1)) * 0.25) + $fontSizeMin;
                    font-size: #{$finalFontSize}px;
                }
            }
            @media only screen and (min-width: $nextScreenSize) {
                @each $screenWidthId, $screenWidthSize in $screenWidths {
                    [class*="jgc-rd-"][class*="-#{$screenSizeLabel}#{$screenWidthId}"] {
                        width: $screenWidthSize;
                    }
                }
                [class*="jgc-rd-"][class*="-#{$screenSizeLabel}hide"] {display: none;}
                [class*="jgc-rd-"][class*="-#{$screenSizeLabel}show"] {display: block;}
            }
        }
    }
}

[class*="jgc-rd-"][class*="-block"] {
    float: none;
    display: inline-block;
}

.jgc-row {
    float: none;
}

.jgc-row::after {
    content: "";
    clear: both;
    display: table;
}